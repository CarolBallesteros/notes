Docker nos permite crear diferentes redes virtuales para nuestras necesidades, ya bien para unir o segmentar diferentes contenedores. De esta manera, podemos separar contenedores por seguridad en redes diferentes, o unirlos en la misma por conveniencia o por conectar sus servicios entre si.

por defecto, Docker nos ofrece tres tipos de redes diferentes:

la primera:
brige:
es donde arrancarian todos nuestros contenedores por defecto.
es una red que crea un puente entre la interfaz de red del contenedor que arrancamos y una interfaz de red virtual que se crea en nuestro equipo cuando instalamos docker.

la segunda:
host:
lo que hace es copiar la configuracion de red del host, es decir, del servidor o maquina donde esta docker en el contenedor que estamos arrancando. si arrancamos un contenedor aqui y ejecutamos la revision de configuracion de red, veremos que es la misma que la de la maquina en la que lo estamos corriendo.

la tercera:
red none:
que utiliza el driver null, que lo que hace es eliminar toda la configuracion de red de nuestro contenedor. si creamos un contenedor aqui, solo tendremos loopback, solo tendremos la direccion 127.0.0.1 y no podremos conectar ningun sitio mas.

cuando instalamos docker, veremos que nos crea una interfaz llamada docker0.
tiene una direccion ip privada, probablemente esta, si no da colision con ninguna otra direccion IP que tengas configurada. y que cuando creas un tipo de contenedor que se conecta a traves de el. todos vuestros contenedores haran NAT a traves de esta IPy atravez de la ip de salida de la maquina host o servidor en le que teneis docker instalado. esta es vuestra red por defecto. de la misma manera, podeis conectar desde aqui a travez de esta interfaz y por esta direccion IP a las direcciones IP de los contenedores que teneis corriendo en esta red.

esta red bridge no es la unica que podeis tener, podeis crear mas para separar nuestros contenedores en diferentes redes. para ello, tienes que ejecutar el siguiente comando:
    docker network create.
teneis que elegir el driver del tipo de red que quereis crear. lo mas probable es que sea una red bridge. y el nombre de la red. vereis dos cosas, una que tenemos una red nueva con el nombre red1, driver bridge y un identificador, otro que si hacemos un ficonfig, veremos tambien que tenemos una interfaz vitual de red nueva en la que tenemos la siglas br de bridge y la id de nuestra red.
si vemos esa interfaz en concreto, vemos que tenemos una nueva direccion IP. dentro de este rango de red, apareceran todos los contenedores que nosotros ejecutemos en red1. y tanto red1 como bridge seran redes separadas. los contenedores que tengamos en bridge que hemos creado no se podran comunicar entre si.

aparte, todo que arranqueis con docker compose, tendra una red privada para el. 
docker compose crear una red cada vez que levanteis una infraestructura completa. como veis, es bastante sencillo de manejar las redes de docker. podeis segmentar todas las aplicaciones que corrais, por seguridad o por el sistema que utilices para conectarlas. por ultimo, podeis usar docker-compose para crear nuevas redes o lanzar los contenedores en redes especificas.

version: '3.4'

services:
  proxy:
    image: busybox
    networks:
      - outside
  app:
    image: busybox
    networks:
      - default
      - inside

networks:
  outside:
    external: true
  default:
  inside:
     driver: bridge
    enable_ipv6: true

las redes tiene su propia interfaz con la linea de comando de docker:

docker network create:
    crea una nueva red

docker network ls:
    muestra las redes de nuestra maquina.

docker inspect:
    devuelve informacion relativa a una red

docker network rm:
    elimina una red.
